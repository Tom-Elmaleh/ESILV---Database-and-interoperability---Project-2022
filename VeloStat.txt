 #region ListMembres
        public void ListeMembres(MySqlConnection connection)
        {

            //foreach (var groupe in individusGroupedByNumero)
            //{
            //    Console.WriteLine("Programme d'adh√©sion" + groupe.Key);
            //    foreach(var ind in groupe)
            //    {
            //        Console.WriteLine(ind.ToString());
            //    }
            //}

            List<Object> Members = new List<Object>();
            connection.Open();
            MySqlCommand command = connection.CreateCommand();
            command.CommandText = "select i.*,descriptionf,duree from individu i join fidelio f on f.numero=i.numero " +
            "group by i.id,descriptionf order by f.numero asc;";
            MySqlDataReader reader;
            reader = command.ExecuteReader();

            int id;
            string nomI;
            string prenom;
            string telephoneI;
            string adresseI;
            string courrielI;
            int numero;
            string descriptionf;
            string duree;

            while (reader.Read())// parcours ligne par ligne
            {
                id = reader.GetInt32(0);
                nomI = reader.GetString(1);
                prenom = reader.GetString(2);
                telephoneI = reader.GetString(3);
                adresseI = reader.GetString(4);
                courrielI = reader.GetString(5);
                numero = reader.GetInt32(6);
                descriptionf = reader.GetString(7);
                duree = $"{reader.GetString(8)} an";
                Console.WriteLine(" ");
               // Members.Add(new Object(id, nomI, prenom, telephoneI, adresseI, courrielI, numero, descriptionf));
            }
            connection.Close();
        }
        #endregion

        #region RapportStat
        public Tuple<List<Tuple<Modele, int>>> RapportStat(MySqlConnection connection)
        {
            var liste_Modele_Vendus = new List<Tuple<Modele, int>>();
            var liste_Piece_Vendues = new List<Tuple<Piece, int>>();

            int nbModele = 0;
            int nbPiece = 0;

            connection.Open();
            MySqlCommand commandModele = connection.CreateCommand();
            commandModele.CommandText = "select modele.*, sum(quantiteM) from contenu_modele natural join modele group by  numM;";
            MySqlDataReader readerModele;
            readerModele = commandModele.ExecuteReader();

            int numM;
            string nomVelo;
            string grandeur;
            int prix;
            string ligne;
            DateTime date_intro;
            DateTime date_sortie;
            int stockM = 0;

            string numP;
            string descriptionP;
            int num_catalogue;
            int delai;
            int stock;
            int prixP;

            while (readerModele.Read())// parcours ligne par ligne
            {
                numM = readerModele.GetInt32(0);
                nomVelo = readerModele.GetString(1);
                grandeur = readerModele.GetString(2);
                prix = readerModele.GetInt32(3);
                ligne = readerModele.GetString(4);
                date_intro = ConversionDateTime(readerModele.GetString(5));
                date_sortie = ConversionDateTime(readerModele.GetString(6));
                nbModele = readerModele.GetInt32(7);
                //stockM = reader.GetInt32(7);

                Modele modele0 = new Modele(numM, nomVelo, grandeur, prix, date_intro, date_sortie, stockM);
                var monTupleModele = Tuple.Create(modele0, nbModele);
                liste_Modele_Vendus.Add(monTupleModele);
            }


            MySqlCommand commandPiece = connection.CreateCommand();
            commandPiece.CommandText = "select  piece.* ,sum(quantiteP)from contenu_piece  natural join piece  group by  numP;";
            MySqlDataReader readerPiece;
            readerPiece = commandPiece.ExecuteReader();

            while (readerPiece.Read())// parcours ligne par ligne
            {
                numP = readerPiece.GetString(0);
                descriptionP = readerPiece.GetString(1);
                num_catalogue = readerPiece.GetInt32(2);
                delai = readerPiece.GetInt32(3);
                stock = readerPiece.GetInt32(4);
                prixP = readerPiece.GetInt32(5);
                nbPiece = readerPiece.GetInt32(6);

                //        stock = reader.GetInt32(6);
                Piece piece0 = new Piece(numP, descriptionP, num_catalogue, delai, stock, prixP);
                var monTuplePiece = Tuple.Create(piece0, nbPiece);
                liste_Piece_Vendues.Add(monTuplePiece);
            }
            connection.Close();

            List<Tuple<object, int>>[] res = [liste_Modele_Vendus, liste_Piece_Vendues];

            return res;
        }
        #endregion

        #region Date_Expiration
        public List<Tuple<Individu, DateTime>> Date_Expiration(MySqlConnection connection)
        {
            var liste_date_expi = new List<Tuple<Individu, DateTime>>();
            connection.Open();
            MySqlCommand command = connection.CreateCommand();
            command.CommandText = "select individu.*,date_adhesion, duree from individu natural join fidelio where date_adhesion is not null;";
            MySqlDataReader reader;
            reader = command.ExecuteReader();

            int id;
            string nomI;
            string prenom;
            string telephoneI;
            string adresseI;
            string courrielI;
            int numero;
            string descriptionf;
            DateTime date_adhesion;
            int duree;
            DateTime date_expiration;


            while (reader.Read())// parcours ligne par ligne
            {
                id = reader.GetInt32(0);
                nomI = reader.GetString(1);
                prenom = reader.GetString(2);
                telephoneI = reader.GetString(3);
                adresseI = reader.GetString(4);
                courrielI = reader.GetString(5);
                numero = reader.GetInt32(6);
                descriptionf = reader.GetString(7);
                date_adhesion = ConversionDateTime(reader.GetString(8));
                duree = reader.GetInt32(9);

                date_expiration = date_adhesion.AddYears(duree);
                Individu indiv = new Individu(id, nomI, prenom, telephoneI, adresseI, courrielI, numero);
                var monTuple = Tuple.Create(indiv, date_expiration);
                liste_date_expi.Add(monTuple);
            }


            connection.Close();

            return liste_date_expi;
        }
        #endregion

        #region Moyennes
        public int Moyenne_Montant(MySqlConnection connection)
        {



            connection.Open();
            MySqlCommand command = connection.CreateCommand();
            command.CommandText = "select PrixP*quantiteP from commande natural join contenu_piece natural join piece;";
            MySqlDataReader reader;
            reader = command.ExecuteReader();

            int moyPrixPieceParCommande = 0;
            int cptPiece = 0;
            int nbPrixPieceParCommande;

            while (reader.Read())// parcours ligne par ligne
            {
                nbPrixPieceParCommande = reader.GetInt32(0);
                moyPrixPieceParCommande += nbPrixPieceParCommande;
                cptPiece++;

            }

            int moyModele = 0;
            int cptModele = 0;

            MySqlCommand commandModele = connection.CreateCommand();
            command.CommandText = "select sum(PrixP) from commande natural join contenu_modele natural join modele natural join piece natural join assemblage group by numC;";
            MySqlDataReader readerModele;
            readerModele = commandModele.ExecuteReader();

            int nbPrixModeleParCommande = 0;

            while (reader.Read())// parcours ligne par ligne
            {
                nbPrixModeleParCommande = reader.GetInt32(0);
                moyModele += nbPrixModeleParCommande;
                cptModele++;
            }

            int moyenneTotale = (moyPrixPieceParCommande + moyModele) / (cptModele + cptPiece);


            connexion.Close();

            return moyenneTotale;
        }
        public int Moyenne_Piece(MySqlConnection connection)
        {
            int moy = 0;
            int cpt = 0;

            connection.Open();
            MySqlCommand command = connection.CreateCommand();
            command.CommandText = "select count(numP)* quantiteP from piece natural join contenu_piece natural join commande group by NumC;";
            MySqlDataReader reader;
            reader = command.ExecuteReader();

            int nbPieceParCommande;

            while (reader.Read())// parcours ligne par ligne
            {
                nbPieceParCommande = reader.GetInt32(0);
                moy += nbPieceParCommande;
                cpt += 1;
            }
            connection.Close();
            moy = moy / cpt;

            return moy;
        }

        public int Moyenne_Modele(MySqlConnection connection)
        {
            int moy = 0;
            int cpt = 0;

            connection.Open();
            MySqlCommand command = connection.CreateCommand();
            command.CommandText = "select count(numM)*quantiteM from modele natural join contenu_modele natural join commande group by NumC;";
            MySqlDataReader reader;
            reader = command.ExecuteReader();

            int nbModeleParCommande;

            while (reader.Read())// parcours ligne par ligne
            {
                nbModeleParCommande = reader.GetInt32(0);
                moy += nbModeleParCommande;
                cpt += 1;
            }
            connection.Close();
            moy = moy / cpt;

            return moy;



        }
        #endregion













using System;
using MySql.Data.MySqlClient;
using System.Collections.Generic;

namespace ProjetBDD_VeloMax
{
    class Program
    {
        
        static void Main(string[] args)
        {
            ConsoleKeyInfo cki;
            do
            {
                Console.Clear();
                Console.WriteLine("Menu : \n" +
                    "1) Module Client\n" +
                    "2) Module Commande \n" +
                    "3) Module Fournisseur\n" +
                    "4) Module Stock\n" + 
                    "\n" +
                    "5) Module Statistique\n" +
                    "\n" +
                    
                    "6) Module Piece et Velo \n" +
                    "7) Module Demo\n" +
                    "\n" +
                    "Quel module souhaitez vous utiliser ?");
                int exo;
                exo = int.Parse(Console.ReadLine());

                switch (exo)
                {

                    case 1:
                        #region Module Client
                        Console.WriteLine("\n ----------------------------------------------------------------------------\n" +
                         "Vous avez choisis le module Client, voici les commandes √† votre disposition : \n ");
                        Console.WriteLine("\n A. Cr√©er un client \n B. Supprimer un client \n C. Modifier un client \n ");


                        string choix = Console.ReadLine();
                        switch (choix)
                        {
                            case "A":

                                Console.WriteLine("Vous avez choisi d'ajouter un nouveau client");
                                Console.WriteLine("\n -----------------------------------\n");
                                //fONCTION CREER 

                                break;

                            case "B":
                                Console.WriteLine("Vous avez choisi de supprimer un client");
                                Console.WriteLine("\n -----------------------------------\n");
                                

                                break;

                            case "C":
                                Console.WriteLine("Vous avez choisi de modifier un client");
                                Console.WriteLine("\n -----------------------------------\n");
                                



                                break;

                           

                            
                        }



                        break;
                    #endregion
                    case 2:
                        #region Module Commande
                        Console.WriteLine("\n -----------------------------------\n" +
                     "Vous avez choisis le module Commande, voici les commandes √† votre disposition : ");
                        Console.WriteLine("\n A. Cr√©er une commande \n B. Supprimer une commande \n C. Modifier une commande \n ");


                        choix = Console.ReadLine();
                        switch (choix)
                        {

                            case "A":
                                Console.WriteLine("Vous avez choisis d'ajouter une nouvelle commande");
                                Console.WriteLine("\n -----------------------------------\n");
                                

                                
                                break;

                            case "B":
                                Console.WriteLine("Vous avez choisis de supprimer une commande");
                                Console.WriteLine("\n -----------------------------------\n");
                                

                                break;

                            case "C":
                                Console.WriteLine("Vous avez choisis de modifier une commande");
                                Console.WriteLine("\n -----------------------------------\n");
                                
                                break;

                            
                              

                        }

                        break;
                    #endregion
                    case 3:
                        #region Fournisseur
                        Console.WriteLine("\n -----------------------------------\n" +
                     "Vous avez choisis le module Fournisseur, voici les commandes √† votre disposition : ");
                        Console.WriteLine("\n A. Cr√©er un fournisseur \n B. Suprrimer un fournisseur \n C. Modifier un fournisseur \n ");

                        choix = Console.ReadLine();
                        switch (choix)
                        {
                            case "A":
                                Console.WriteLine("Vous avez choisis d'ajouter un nouveau fournisseur");
                                Console.WriteLine("\n -----------------------------------\n");
                                //fonction qui demande les atributs et ajoute fournisseur
                                
                                break;

                            case "B":
                                Console.WriteLine("Vous avez choisis de supprimer un nouveau fournisseur");
                                Console.WriteLine("\n -----------------------------------\n");
                                Console.WriteLine("Quel est le nom du fourniseur ");

                                string nomfournisseur = Console.ReadLine();


                                
                                break;

                            case "C":
                                Console.WriteLine("Vous avez choisis de modifier un nouveau fournisseur");
                                Console.WriteLine("\n -----------------------------------\n");
                                //fonction afficage 
                              
                                break;

     

                        }

                        break;

                    #endregion
                    case 4:
                        #region Stock
                        Console.WriteLine("\n -----------------------------------\n" +
                     "Vous avez choisis le module Stock, voici les commandes √† votre disposition : ");
                        Console.WriteLine("\n A.Stock Piece \n B. Stock Velo \n " 
                          );
                        string choix2 = Console.ReadLine();
                        int choixpiece;
                        int choixVelo;
                        switch (choix2)
                        {
                            case "A":
                                Console.WriteLine("Vous avez choisi d'examiner le stock de piece ! ");
                                Console.WriteLine("\n -----------------------------------\n");
                                Console.WriteLine("Le nombre de piece total est de:");//rajouter stock total de piece
                                Console.WriteLine("\n -----------------------------------\n" +
                               "Voici les commandes √† votre disposition : ");
                                Console.WriteLine("\n 1.Par piece (CF3, G7,...) \n 2. Par type de piece (frein,cadre,...)  " +
                                    "\n "
                                  );

                                choixpiece = Convert.ToInt32(Console.ReadLine());
                                switch (choixpiece)
                                {
                                    case 1:
                                        Console.WriteLine("Voici le stock par piece: ");//Tom
                                        break;
                                    case 2:
                                        Console.WriteLine("Voici le stock par type de piece : ");//tOM
                                        break;

                                }


                                break;

                            case "B":
                                Console.WriteLine("Vous avez choisi d'examiner le stock de velo ! ");
                                Console.WriteLine("\n -----------------------------------\n");
                                Console.WriteLine("Le nombre de velo total est de:");//rajouter stock total de velo
                                Console.WriteLine("\n -----------------------------------\n" +
                               "Voici les commandes √† votre disposition : ");
                                Console.WriteLine("\n 1.Par marque (killimanjaro,..) \n 2. Par grandeur \n3.Par ligne  " +
                                    "\n ");//tOM

                                choixVelo= Convert.ToInt32(Console.ReadLine());
                                switch (choixVelo)
                                {
                                    case 1:
                                        Console.WriteLine("Voici le stock de velo par marque: ");//TOM
                                        break;
                                    case 2:
                                        Console.WriteLine("Voici le stock velo par grandeur : ");//tom
                                        break;
                                    case 3:
                                        Console.WriteLine("Voici le stock de velos par ligne : ");//tOM
                                        break;

                                }
              

                                break;

                        }
                        break;

                    #endregion
                    case 5:
                        #region Pieces et Velo
                         
                        Console.WriteLine("\n -----------------------------------\n" +
                     "Vous avez choisis le module Pieces et Velos, voici les commandes √† votre disposition : ");
                        Console.WriteLine("\n A. Gestion Piece \n B. Gestion Velo \n ");
                        //Ici, embaucher ou licencier un salari√© revient √† l'ajouter (ou le supprimer) de l'organigramme, c'est-√†-dire de l'arbre n-aire
                        int choixPiece;
                        int choixVelo;
                        string choix3 = Console.ReadLine();
                        switch (choix3)
                        {
                            case "A":
                                Console.WriteLine("Vous avez choisi la gestion des Pieces ! ");
                                Console.WriteLine("\n -----------------------------------\n");
                                Console.WriteLine("Vous avez choisis la gestion des Velos, voici les commandes √† votre disposition : ");
                                Console.WriteLine("\n A. Creer un Velo \n B. Supprimer un Velo \nC. Modifier un Velo ");

                                break;

                            case "B":
                                Console.WriteLine("Vous avez choisi la gestion des Velos ! ");
                                Console.WriteLine("\n -----------------------------------\n");
                                Console.WriteLine("Vous avez choisis la gestion des Velos, voici les commandes √† votre disposition : ");
                                Console.WriteLine("\n A. Creer un Velo \n B. Supprimer un Velo \nC. Modifier un Velo ");
                                

                                choixVelo = Convert.ToInt32(Console.ReadLine());

                                switch (choixVelo)
                                {
                                    case 'A':
                                        Console.WriteLine("Est-ce un velo existant ou non ? ");
                                        int choixExiste = Convert.ToInt32(Console.ReadLine());
                                        switch (choixExiste)
                                        {
                                            case 1:
                                                // fonction qui incremente le stock
                                                break;
                                            case 2:
                                                // fonction qui creer un nouvel individu avec un INSERT 
                                                break;
                                        }

                                        break;
                                    case 'B':
                                        Console.WriteLine("Est-ce un velo existant ou non ? ");
                                        int choixExiste2 = Convert.ToInt32(Console.ReadLine());
                                        switch (choixExiste2)
                                        {
                                            case 1:
                                                Console.WriteLine("Rentrez num√©ro du velo :");
                                                int numeroVelo = Convert.ToInt32(Console.ReadLine());
                                                Console.WriteLine("Quellle quantit√© ?");
                                                int quantiteAsupprimer = Convert.ToInt32(Console.ReadLine());
                                                // fonction qui d√©cremente le stock
                                                break;
                                            case 2:
                                                Console.WriteLine("Quellle quantit√© ?");
                                                Console.WriteLine("Rentrez num√©ro du velo :");
                                                int numeroVelo2 = Convert.ToInt32(Console.ReadLine());
                                                int quantiteAsupprimer2 = Convert.ToInt32(Console.ReadLine());
                                                // fonction qui supprime un nouvel individu avec un DELETE
                                                break;
                                        }
                                        break;

                                    case 'C':
                                        Console.WriteLine("Quel est le num√©ro du velo que vous voulez modifier ?");
                                        int numeroAmodeifier = Convert.ToInt32(Console.ReadLine());
                                        Console.WriteLine("Que voulez vous modifier ?");
                                        string Amodif = Console.ReadLine();//regarder le nom affich√©
                                        // fonction qui update grace √† UPDATE 
                                        break;


                                }
                                break;



                        }
                        break;

                }
                #endregion

                Console.WriteLine("\nTapez Escape pour sortir ou Enter pour continuer");
                cki = Console.ReadKey();
            } while (cki.Key != ConsoleKey.Escape);

            Console.ReadLine();






        }


        MenuClass menu = new MenuClass();
            menu.Menu();
            //bdd.Models;
        }
    }
}

